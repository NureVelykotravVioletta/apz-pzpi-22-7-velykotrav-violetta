МІНІСТЕРСТВО ОСВІТИ І НАУКИ УКРАЇНИ
ХАРКІВСЬКИЙ НАЦІОНАЛЬНИЙ УНІВЕРСИТЕТ РАДІОЕЛЕКТРОНІКИ






ЗВІТ
З практичної роботи №2
З дисципліни «Архітектура програмного забезпечення»
На тему «Архітектура програмної системи Netflix»







 
Виконала:
ст. гр. ПЗПІ-22-7
Великотрав В. Ю.
Перевірив:
 ст. викл. кафедри ПІ
 Сокорчук І. П. 







Харків 2025
1 Історія змін

№	Дата	Версія звіту	Опис змін та виправлень
1	26.05.2025	0.1	Створення роботи


2 Завдання

1.	Підготувати доповідь про архітектуру однієї з відомих складних програмних систем.
2.	Створити та оформити слайди презентації доповіді
3.	Створити та опублікувати на YouTube відеозапис доповіді
4.	Оформити та завантажити на dl.nure.ua звіт до виконаної роботи
5.	При потребі створити та налаштувати у GitHub обліковий запис для облікового запису студента в домені @nure.ua
6.	Створити для виконання завдань з дисципліни GitHub репозиторій iз вказаним на https://dl.nure.ua іменем та з головною гілкою main
7.	Створити у корені створеного репозиторію файл README.md з вказаним далі змістом та вказані далі директорії для окремих завдань
8.	Експортувати звіт у файл у простому текстововому форматі та завантажити цей файл у директорію Pract2 у репозиторії GitHub
9.	Завантажити у вказану далі піддиректорію увесь програмний код, який розглядається у доповіді ПЗ2


3 Опис виконаної роботи

У процесі підготовки доповіді на тему «Архітектура програмної системи Netflix» було проведено комплексну аналітичну роботу, спрямовану на вивчення одного з наймасштабніших і найтехнологічніших програмних рішень сучасності.
Перш за все, було визначено основні цілі дослідження — ознайомитися зі структурою програмної архітектури Netflix, зрозуміти принципи її побудови, виявити ключові технології та механізми, що забезпечують високу продуктивність, масштабованість і стійкість системи.
Для цього було опрацьовано різноманітні джерела інформації:
– технічні статті, опубліковані розробниками Netflix на платформі Netflix Tech Blog,
–	матеріали з конференцій (наприклад, QCon, AWS re:Invent),
–	документацію щодо використання хмарних сервісів AWS,
–	наукові публікації, присвячені мікросервісній архітектурі, масштабуванню та відмовостійкості.

У результаті аналізу було виявлено, що система Netflix побудована на мікросервісній архітектурі, де кожен сервіс відповідає за окрему функцію: автентифікацію користувачів, рекомендації контенту, білінг, обробку відео тощо. Усі сервіси розгортаються у хмарному середовищі AWS та взаємодіють між собою через API.
Окрема увага була приділена:
–	граничному шару (edge layer), що включає API-шлюзи та маршрутизатори запитів;
–	власній CDN-мережі Netflix Open Connect, що відповідає за ефективну доставку відео-контенту по всьому світу;
–	системі персоналізованих рекомендацій, яка ґрунтується на алгоритмах машинного навчання;
–	практиці Chaos Engineering, що передбачає свідоме тестування відмовостійкості шляхом штучного створення збоїв у роботі сервісів.

Також було розглянуто інструменти автоматизації розгортання (наприклад, Spinnaker), системи моніторингу (Atlas, Prometheus, Grafana) та способи забезпечення високої доступності сервісів навіть у разі збоїв на рівні регіонів.
На основі зібраного матеріалу було сформовано структуру доповіді, розроблено змістовний текст із поясненнями, прикладами та висновками, що демонструють, як архітектурні рішення Netflix сприяють досягненню її високих бізнес-цілей.


4 Висновки
У ході дослідження архітектури програмної системи Netflix було проаналізовано, як мікросервісний підхід, хмарні технології, системи рекомендацій на основі машинного навчання та власна CDN-інфраструктура забезпечують ефективну, масштабовану й надійну роботу платформи. Netflix вдалося побудувати стійку до збоїв екосистему, яка здатна обслуговувати сотні мільйонів користувачів у режимі 24/7. Впровадження практик Chaos Engineering, автоматизованого розгортання та розподіленого зберігання даних свідчить про високий рівень інженерної культури компанії. Отримані результати демонструють, що успішна архітектура великомасштабних систем вимагає не лише сучасних технологій, а й стратегічного підходу до їх впровадження, тестування та безперервного вдосконалення.
 
ДОДАТОК А

Відеозапис доповіді на Youtube: https://youtu.be/rgxyGPmMjBg

00:00 Тема роботи 
00:13 Вступ 
00:47 Основні вимоги до архітектури Netflix 
1:44 Загальна архітектура 
2:14 Основні компоненти архітектури. Користувацький інтерфейс (Frontend)
2:33 API-шлюз (Edge services) 
3:07 Backend-сервіси 
3:42 Рекомендаційна система 
4:14 Система стрімінгу відео 
4:37 Сховища даних 
5:06 Забезпечення надійності. Chaos Engineering 
5:35 Балансування навантаження і резервування 
5:54 DevOps, CI/CD і моніторинг 
6:34 Висновок 
ДОДАТОК Б

 
Рисунок Б.1 – Титульний слайд

 
Рисунок Б.2 – Вступ

 
Рисунок Б.3 – Основні вимоги до архітектури Netflix

 
Рисунок Б.4 – Загальна архітектура

 
Рисунок Б.5 – Основні компоненти архітектури. Користувацький інтерфейс

 
Рисунок Б.6 – API-шлюз

 
Рисунок Б.7 – Backend-сервіси

 
Рисунок Б.8 – Рекомендаційна система

 
Рисунок Б.9 – Система стрімінгу відео

 
Рисунок Б.10 – Сховища даних

 
Рисунок Б.11 – Забезпечення надійності. Chaos Engineering

 
Рисунок Б.12 – Балансування навантаження і резервування

 
Рисунок Б.13 – DevOps, CS/CD і моніторинг

 
Рисунок Б.14 - Висновок


